# Generated by Django 2.0.2 on 2018-03-02 15:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advising',
            fields=[
                ('advising_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('building_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('credits', models.IntegerField(choices=[('TWO', 2), ('THREE', 3), ('FOUR', 4)])),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('building_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Building')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollment_id', models.AutoField(primary_key=True, serialize=False)),
                ('grade', models.CharField(choices=[('A', 'A'), ('A_minus', 'A-'), ('B', 'B'), ('B_minus', 'B-'), ('C', 'C'), ('C_minus', 'C-'), ('D', 'D'), ('D_minus', 'D-'), ('F', 'F'), ('Incomplete', 'I'), ('Withdraw', 'W'), ('NA', 'NA')], default='NA', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Hold',
            fields=[
                ('hold_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('major_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Department')),
            ],
        ),
        migrations.CreateModel(
            name='MajorRequirement',
            fields=[
                ('major_req_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Course')),
                ('major_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Major')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingDays',
            fields=[
                ('days_id', models.AutoField(primary_key=True, serialize=False)),
                ('day_1', models.CharField(choices=[('MONDAY', 'MONDAY'), ('TUESDAY', 'TUESDAY'), ('WEDNESDAY', 'WEDNESDAY'), ('THURSDAY', 'THURSDAY'), ('FRIDAY', 'FRIDAY'), ('SATURDAY', 'SATURDAY'), ('SUNDAY', 'SUNDAY')], max_length=10)),
                ('day_2', models.CharField(choices=[('MONDAY', 'MONDAY'), ('TUESDAY', 'TUESDAY'), ('WEDNESDAY', 'WEDNESDAY'), ('THURSDAY', 'THURSDAY'), ('FRIDAY', 'FRIDAY'), ('SATURDAY', 'SATURDAY'), ('SUNDAY', 'SUNDAY')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Meetings',
            fields=[
                ('meeting_id', models.AutoField(primary_key=True, serialize=False)),
                ('meeting_date', models.DateTimeField(verbose_name='meeting date')),
                ('present_or_absent', models.BooleanField(default=False)),
                ('enrollment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Enrollment')),
            ],
        ),
        migrations.CreateModel(
            name='Minor',
            fields=[
                ('minor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Department')),
            ],
        ),
        migrations.CreateModel(
            name='MinorRequirement',
            fields=[
                ('minor_req_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Course')),
                ('minor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Minor')),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('period_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Prerequisite',
            fields=[
                ('prerequisite_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prerequisite_course_id', to='registration_system.Course')),
                ('course_required_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_required_id', to='registration_system.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=35)),
                ('capacity', models.IntegerField()),
                ('room_number', models.CharField(max_length=5)),
                ('building_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Building')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_id', models.AutoField(primary_key=True, serialize=False)),
                ('seat_capacity', models.IntegerField()),
                ('seats_taken', models.IntegerField(default=0)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Course')),
                ('room_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration_system.Room')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField(choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018)], default=2018)),
                ('season', models.CharField(choices=[('WINTER', 'WINTER'), ('SPRING', 'SPRING'), ('FALL', 'FALL'), ('SUMMER', 'SUMMER')], max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='StudentHistory',
            fields=[
                ('student_hist_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('FRESHMAN', 'FRESHMAN'), ('SOPHOMORE', 'SOPHOMORE'), ('JUNIOR', 'JUNIOR'), ('SENIOR', 'SENIOR'), ('GRADUATED', 'GRADUATE'), ('GRADUATE_STUDENT', 'GRADUATE_STUDENT')], max_length=35)),
                ('enrollment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Enrollment')),
            ],
        ),
        migrations.CreateModel(
            name='StudentHold',
            fields=[
                ('student_hold_id', models.AutoField(primary_key=True, serialize=False)),
                ('hold_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Hold')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMajor',
            fields=[
                ('student_major_id', models.AutoField(primary_key=True, serialize=False)),
                ('major_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Major')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMinor',
            fields=[
                ('student_minor_id', models.AutoField(primary_key=True, serialize=False)),
                ('minor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Minor')),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('time_slot_id', models.AutoField(primary_key=True, serialize=False)),
                ('days_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.MeetingDays')),
                ('period_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Period')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('ADMIN', 'A'), ('STUDENT', 'S'), ('FACULTY', 'F'), ('RESEARCHER', 'R')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='registration_system.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('faculty_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='registration_system.UserProfile')),
                ('faculty_type', models.CharField(choices=[('FULL_TIME', 'F'), ('PART_TIME', 'P')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('researcher_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='registration_system.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='registration_system.UserProfile')),
                ('date_of_birth', models.DateField()),
                ('student_type', models.CharField(choices=[('FULL_TIME', 'F'), ('PART_TIME', 'P')], max_length=1)),
            ],
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='section',
            name='semester_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration_system.Semester'),
        ),
        migrations.AddField(
            model_name='section',
            name='time_slot_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration_system.TimeSlot'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='section_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Section'),
        ),
        migrations.AddField(
            model_name='course',
            name='department_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Department'),
        ),
        migrations.CreateModel(
            name='FullTimeFaculty',
            fields=[
                ('faculty_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='registration_system.Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='FullTimeStudent',
            fields=[
                ('student_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='registration_system.Student')),
                ('credits', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PartTimeFaculty',
            fields=[
                ('faculty_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='registration_system.Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='PartTimeStudent',
            fields=[
                ('student_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='registration_system.Student')),
                ('credits', models.IntegerField(default=0)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='timeslot',
            unique_together={('days_id', 'period_id')},
        ),
        migrations.AddField(
            model_name='studentminor',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Student'),
        ),
        migrations.AddField(
            model_name='studentmajor',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Student'),
        ),
        migrations.AddField(
            model_name='studenthold',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Student'),
        ),
        migrations.AddField(
            model_name='studenthistory',
            name='adviser',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration_system.Faculty'),
        ),
        migrations.AddField(
            model_name='studenthistory',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Student'),
        ),
        migrations.AddField(
            model_name='section',
            name='faculty_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration_system.Faculty'),
        ),
        migrations.AlterUniqueTogether(
            name='prerequisite',
            unique_together={('course_id', 'course_required_id')},
        ),
        migrations.AlterUniqueTogether(
            name='minorrequirement',
            unique_together={('course_id', 'minor_id')},
        ),
        migrations.AddField(
            model_name='meetings',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Student'),
        ),
        migrations.AlterUniqueTogether(
            name='majorrequirement',
            unique_together={('course_id', 'major_id')},
        ),
        migrations.AddField(
            model_name='faculty',
            name='department_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Department'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Student'),
        ),
        migrations.AddField(
            model_name='department',
            name='chair_id',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration_system.Faculty'),
        ),
        migrations.AddField(
            model_name='advising',
            name='faculty_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Faculty'),
        ),
        migrations.AddField(
            model_name='advising',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration_system.Student'),
        ),
        migrations.AlterUniqueTogether(
            name='studentminor',
            unique_together={('student_id', 'minor_id')},
        ),
        migrations.AlterUniqueTogether(
            name='studentmajor',
            unique_together={('student_id', 'major_id')},
        ),
        migrations.AlterUniqueTogether(
            name='studenthold',
            unique_together={('student_id', 'hold_id')},
        ),
        migrations.AlterUniqueTogether(
            name='studenthistory',
            unique_together={('student_id', 'enrollment_id')},
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together={('section_id', 'course_id')},
        ),
        migrations.AlterUniqueTogether(
            name='meetings',
            unique_together={('enrollment_id', 'student_id')},
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('student_id', 'section_id')},
        ),
        migrations.AlterUniqueTogether(
            name='advising',
            unique_together={('faculty_id', 'student_id')},
        ),
    ]
